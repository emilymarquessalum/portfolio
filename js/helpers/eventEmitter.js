class EventEmitter{constructor(){this.events={}}on(t,e){return"object"!=typeof this.events[t]&&(this.events[t]=[]),this.events[t].push(e),()=>this.removeListener(t,e)}removeListener(t,e){if("object"==typeof this.events[t]){const s=this.events[t].indexOf(e);s>-1&&this.events[t].splice(s,1)}}emit(t,...e){"object"==typeof this.events[t]&&this.events[t].forEach(t=>t.apply(this,e))}once(t,e){const s=this.on(t,(...t)=>{s(),e.apply(this,t)})}}export default EventEmitter;