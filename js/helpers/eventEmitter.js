export default class EventEmitter{constructor(){this.events={}}on(e,t){return"object"!=typeof this.events[e]&&(this.events[e]=[]),this.events[e].push(t),()=>this.removeListener(e,t)}removeListener(e,t){if("object"==typeof this.events[e]){const s=this.events[e].indexOf(t);s>-1&&this.events[e].splice(s,1)}}emit(e,...t){"object"==typeof this.events[e]&&this.events[e].forEach(e=>e.apply(this,t))}once(e,t){const s=this.on(e,(...e)=>{s(),t.apply(this,e)})}};